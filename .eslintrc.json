{
    "env": {
        "browser": true,
        "commonjs": true,
        "es6": true
    },
    "plugins": [
        "@typescript-eslint",
        "compat",
        "import",
        "jsdoc",
        "prettier",
        "tsdoc",
        "unicorn",
        "regexp",
        "vue"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:compat/recommended",
        "plugin:import/typescript",
        "plugin:jsdoc/recommended",
        "plugin:regexp/recommended",
        "plugin:vue/essential",
        "prettier"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly",
        "process": "readonly",
        "__dirname": "readonly",
        "PREFIX": "readonly",
        "MODE": "readonly",
        "VERSION": "readonly",
        "BRANCH": "readonly",
        "LOADSCRIPT_EVENT_START": "readonly",
        "LOADSCRIPT_EVENT_END": "readonly"
    },
    "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "settings": {
        "jsdoc": {
            "mode": "typescript"
        }
    },
    "rules": {
        "@typescript-eslint/array-type": ["error"],
        "@typescript-eslint/consistent-indexed-object-style": [ "error", "record"],
        "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
        "@typescript-eslint/consistent-type-imports": ["error"],
        "@typescript-eslint/method-signature-style": ["error", "method"],
        "@typescript-eslint/no-duplicate-enum-values": ["off"],
        "@typescript-eslint/sort-type-constituents": ["error"],
        "array-callback-return": ["error"],
        "block-scoped-var": "warn",
        "curly": ["error", "multi-or-nest", "consistent"],
        "default-case-last": "error",
        "guard-for-in": "error",
        "import/order": ["error", {
            "groups": [
                ["builtin"],
                ["external"],
                ["internal"],
                ["parent", "sibling"],
                ["index"],
                ["object"],
                ["type"]
            ],
            "pathGroups": [
                {
                    "pattern": "vue",
                    "group": "builtin",
                    "position": "before"
                }
            ],
            "pathGroupsExcludedImportTypes": ["vue"],
            "newlines-between": "always"
        }],
        "jsdoc/check-syntax": ["error"],
        "jsdoc/check-tag-names": ["error", {
            "definedTags": ["alpha", "beta"]
        }],
        "jsdoc/no-types": ["error"],
        "jsdoc/require-asterisk-prefix": ["error"],
        "jsdoc/require-description": ["error"],
        "jsdoc/require-description-complete-sentence": ["error"],
        // TODO: add a @file JSDoc to all files and then enable this rule
//        "jsdoc/require-file-overview": ["error"],
        "jsdoc/require-hyphen-before-param-description": ["error"],
        "jsdoc/require-param-type": ["off"],
        "jsdoc/require-returns-type": ["off"],
        "no-constant-binary-expression": "error",
        "no-duplicate-imports": ["error", { "includeExports": true }],
        "no-eval": "error",
        "no-floating-decimal": "warn",
        "no-implicit-coercion": ["error", {
            "allow": ["!!"]
        }],
        "no-loop-func": "error",
        "no-loss-of-precision": "error",
//        "no-magic-numbers": ["warn", {
//            "ignoreArrayIndexes": true,
//            "ignoreDefaultValues": true,
//            "enforceConst": true
//        }],
        "no-multi-str": "warn",
        "no-new-native-nonconstructor": "error",
        "no-param-reassign": "error",
        "no-prototype-builtins": "off",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-template-curly-in-string": "warn",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-expressions": "error",
        "no-useless-concat": "warn",
        "no-useless-rename": "error",
        "no-useless-return": "warn",
        "no-var": "error",
        "object-shorthand": ["error", "always", { "avoidQuotes": true }],
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-regex-literals": ["error", {
            "disallowRedundantWrapping": true
        }],
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "prettier/prettier": "error",
        "regexp/hexadecimal-escape": ["error", "never"],
        "regexp/letter-case": ["error"],
        "regexp/no-control-character": ["error"],
        "regexp/no-empty-character-class": ["error"],
        "regexp/no-extra-lookaround-assertions": ["error"],
        "regexp/no-misleading-unicode-character": ["error"],
        "regexp/no-missing-g-flag": ["error"],
        "regexp/no-octal": ["error"],
        "regexp/no-standalone-backslash": ["error"],
        "regexp/prefer-escape-replacement-dollar-char": ["error"],
        "regexp/prefer-lookaround": ["error"],
        "regexp/prefer-named-backreference": ["error"],
        "regexp/prefer-named-replacement": ["error"],
        // "regexp/prefer-quantifier": ["error"], // Waiting for the option to enable for > 3 repetitions,
        "regexp/prefer-result-array-groups": ["error"],
        "regexp/prefer-regexp-test": ["error"],
        "regexp/require-unicode-regexp": ["error"],
        "regexp/sort-alternatives": ["error"],
        "regexp/sort-character-class-elements": ["error"],
        "regexp/unicode-escape": ["error", "unicodeEscape"],
        "regexp/use-ignore-case": ["error"],
        "semi": ["error", "always"],
        "sort-imports": ["warn", {
            "allowSeparatedGroups": true,
            "ignoreCase": true,
            "memberSyntaxSortOrder": ["none", "all", "single", "multiple"]
        }],
        "template-curly-spacing": "error",
        "tsdoc/syntax": "warn",
        "unicorn/consistent-destructuring": ["error"],
        "unicorn/no-array-push-push": ["error"],
        "unicorn/no-for-loop": ["error"],
        "unicorn/no-unnecessary-await": ["error"],
        "unicorn/no-unreadable-iife": ["error"],
        "unicorn/no-useless-switch-case": ["error"],
        "unicorn/no-zero-fractions": ["error"],
        "unicorn/numeric-separators-style": ["error"],
        "unicorn/prefer-add-event-listener": ["error"],
        "unicorn/prefer-array-index-of": ["error"],
        "unicorn/prefer-array-find": ["error", {"checkFromLast":  true}],
        "unicorn/prefer-array-flat": ["error"],
        "unicorn/prefer-array-flat-map": ["error"],
        "unicorn/prefer-array-some": ["error"],
        "unicorn/prefer-at": ["error"],
        "unicorn/prefer-dom-node-append": ["error"],
        "unicorn/prefer-dom-node-remove": ["error"],
        "unicorn/prefer-dom-node-text-content": ["error"],
        "unicorn/prefer-keyboard-event-key": ["error"],
        "unicorn/prefer-modern-dom-apis": ["error"],
        "unicorn/prefer-modern-math-apis": ["error"],
        "unicorn/prefer-native-coercion-functions": ["error"],
        "unicorn/prefer-negative-index": ["error"],
        "unicorn/prefer-object-from-entries": ["error"],
        "unicorn/prefer-query-selector": ["error"],
        "unicorn/switch-case-braces": ["error", "avoid"],
        "vue/no-unused-refs": "warn",
        "vue/prefer-true-attribute-shorthand": "warn",
        "yoda": ["error", "never", {
            "exceptRange": true
        }]
    },
    "overrides": [
        {
            "files": ["*.md"],
            "plugins": ["markdownlint"],
            "parser": "eslint-plugin-markdownlint/parser",
            // We will set all non-deprecated markdownlint rules explicitly to avoid unwanted behaviour
            "rules": {
                // Turn off prettier for markdown files as we cannot configure it enough
                "prettier/prettier": ["off"],
                // Heading levels should only increment by one level at a time
                "markdownlint/md001": ["error"],
                // Heading style
                "markdownlint/md003": ["error", {
                    "style": "atx"
                }],
                // Unordered list style
                "markdownlint/md004": ["error", {
                    "style": "asterisk"
                }],
                // Inconsistent indentation for list items at the same level
                "markdownlint/md005": ["error"],
                // Unordered list indentation
                "markdownlint/md007": ["error", {
                    "indent": 4
                }],
                // Trailing spaces
                "markdownlint/md009": ["error"],
                // Hard tabs
                "markdownlint/md010": ["error", {
                    "spaces_per_tab": 4
                }],
                // Reversed link syntax
                "markdownlint/md011": ["error"],
                // Multiple consecutive blank lines
                "markdownlint/md012": ["error"],
                // Line length
                // "markdownlint/md013": ["error", {
                //     "line_length": 120
                // }],
                // Dollar signs used before commands without showing output
                "markdownlint/md014": ["error"],
                // No space after hash on atx style heading
                "markdownlint/md018": ["error"],
                // Multiple spaces after hash on atx style heading
                "markdownlint/md019": ["error"],
                // No space inside hashes on closed atx style heading
                "markdownlint/md020": ["error"],
                // Multiple spaces inside hashes on closed atx style heading
                "markdownlint/md021": ["error"],
                // Headings should be surrounded by blank lines
                "markdownlint/md022": ["error", {
                    "lines_above": 1,
                    "lines_below": 0
                }],
                // Headings must start at the beginning of the line
                "markdownlint/md023": ["error"],
                // Multiple headings with the same content
                "markdownlint/md024": ["error", {
                    "siblings_only": true
                }],
                // Multiple top-level headings in the same document
                // turned off for now as we need to improve headings in docs
                "markdownlint/md025": ["off"],
                // "markdownlint/md025": ["error", {
                //    "level": 2
                // }],
                // Trailing punctuation in heading
                "markdownlint/md026": ["error"],
                // Multiple spaces after blockquote symbol
                "markdownlint/md027": ["error"],
                // Blank line inside blockquote
                "markdownlint/md028": ["error"],
                // Ordered list item prefix
                "markdownlint/md029": ["error", {
                    "style": "ordered"
                }],
                // Spaces after list markers
                "markdownlint/md030": ["error"],
                // Fenced code blocks should be surrounded by blank lines
                "markdownlint/md031": ["error"],
                // Lists should be surrounded by blank lines
                "markdownlint/md032": ["error"],
                // Inline HTML
                "markdownlint/md033": ["error", {
                    "allowed_elements": [
                        "discord",
                        "a"
                    ] // These are Vue elements used in the docs
                }],
                // Bare URL used
                "markdownlint/md034": ["error"],
                // Horizontal rule style
                "markdownlint/md035": ["error", {
                    "style": "***"
                }],
                // Emphasis used instead of a heading
                "markdownlint/md036": ["error"],
                // Spaces inside emphasis markers
                "markdownlint/md037": ["error"],
                // Spaces inside code span elements
                "markdownlint/md038": ["error"],
                // Spaces inside link text
                "markdownlint/md039": ["error"],
                // Fenced code blocks should have a language specified
                "markdownlint/md040": ["error"],
                // First line in a file should be a top-level heading
                "markdownlint/md041": ["off"], // turned off because not usefull for module docs
                // No empty links
                "markdownlint/md042": ["error"],
                // Proper names should have the correct capitalization
                "markdownlint/md044": ["error", {
                    "names": [
                        "LSSM"
                    ]
                }],
                // Images should have alternate text (alt text)
                "markdownlint/md045": ["error"],
                // Code block style
                "markdownlint/md046": ["error", {
                    "style": "fenced"
                }],
                // Files should end with a single newline character
                "markdownlint/md047": ["error"],
                // Code fence style
                "markdownlint/md048": ["error", {
                    "style": "backtick"
                }],
                // Emphasis style should be consistent
                "markdownlint/md049": ["error", {
                    "style": "asterisk"
                }],
                // Strong style should be consistent
                "markdownlint/md050": ["error", {
                    "style": "asterisk"
                }]
                // TODO: Wait for eslint-plugin-markdownlint to being updated (currently does not support these rules yet). See https://gitlab.com/pawelbbdrozd/eslint-plugin-markdownlint/-/issues/10 for details.
                // Link fragments should be valid
                // "markdownlint/md051": ["error"],
                // Reference links and images should use a label that is defined
                // "markdownlint/md052": ["error"],
                // Link and image reference definitions should be needed
                // "markdownlint/md053": ["error"]
            }
        }
    ]
}
